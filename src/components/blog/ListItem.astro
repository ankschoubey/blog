---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';
import ReadChecklist from '~/components/blog/ReadChecklist.astro';

import { APP_BLOG } from '~/utils/config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article 
  class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? 'md:grid-cols-2' : ''} post-item`} 
  data-post-id={post.id}
>
  {
    image && (
      <a class="group relative block" href={link ?? 'javascript:void(0)'}>
        <div class="relative h-0 overflow-hidden rounded bg-gray-400 pb-[56.25%] shadow-lg dark:bg-slate-700 md:h-72 md:pb-[75%] lg:pb-[56.25%]">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 mb-6 h-full w-full rounded bg-gray-400 object-cover shadow-lg dark:bg-slate-700"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      </a>
    )
  }
  <div class="mt-2">
    <header>
      <div class="mb-1">
        <span class="text-sm">
          <Icon name="tabler:clock" class="-mt-0.5 inline-block h-3.5 w-3.5 dark:text-gray-400" />
          <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>
          {
            post.category && (
              <>
                {' '}
                Â·{' '}
                <a class="capitalize hover:underline" href={getPermalink(post.category, 'category')}>
                  {post.category.replaceAll('-', ' ')}
                </a>
              </>
            )
          }
        </span>
      </div>
      <h2 class="mb-2 font-heading text-xl font-bold leading-tight dark:text-slate-300 sm:text-2xl">
        {
          link ? (
            <a class="transition duration-200 ease-in hover:text-primary dark:hover:text-blue-700" href={link}>
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
    </header>

    {post.excerpt && <p class="flex-grow text-lg text-muted dark:text-slate-400">{post.excerpt}</p>}
    <footer class="mt-5">
      <PostTags tags={post.tags} />
      <ReadChecklist postId={post.id} postTitle={post.title} />
    </footer>
  </div>
</article>

<style>
  .post-item {
    position: relative;
    transition: all 0.3s ease;
  }
  
  .post-item.read {
    opacity: 0.95;
    background-color: rgba(16, 185, 129, 0.05); /* Light version of #10B981 */
    border: 1px solid rgba(16, 185, 129, 0.2); /* Subtle green border */
    border-radius: 8px;
    padding: 8px;
  }
  
  .dark .post-item.read {
    background-color: rgba(16, 185, 129, 0.08); /* Slightly stronger in dark mode */
    border-color: rgba(16, 185, 129, 0.3); /* Slightly stronger border in dark mode */
  }
</style>

<script>
  // Add read class to posts that are marked as read
  function updateReadStatus() {
    const posts = document.querySelectorAll('.post-item');
    
    posts.forEach((post) => {
      const postId = post.getAttribute('data-post-id');
      if (postId) {
        const isRead = localStorage.getItem(`post-${postId}-read`) === 'true';
        post.classList.toggle('read', isRead);
      }
    });
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', updateReadStatus);
  
  // Update when checkboxes change
  document.addEventListener('change', (e) => {
    if ((e.target as HTMLElement).matches('input[type="checkbox"][data-post-id]')) {
      updateReadStatus();
    }
  });
</script>
