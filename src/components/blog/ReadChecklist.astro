---
interface Props {
  postId: string;
  postTitle: string;
}

const { postId, postTitle } = Astro.props;
---

<div class="flex items-center gap-2 mt-4">
  <label class="read-checkbox-label" for={`read-${postId}`}>
    <input
      type="checkbox"
      id={`read-${postId}`}
      class="read-checkbox"
      data-post-id={postId}
      data-post-title={postTitle}
    />
    <span class="checkmark">âœ“</span>
    <span class="label-text">Mark as read</span>
  </label>
</div>

<style>
  .read-checkbox-label {
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
    position: relative;
    padding-left: 32px;
    user-select: none;
  }

  .read-checkbox {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  .checkmark {
    position: absolute;
    left: 0;
    height: 24px;
    width: 24px;
    background-color: #ffffff;
    border: 2px solid #e2e8f0;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: transparent;
    transition: all 0.2s ease;
  }

  .dark .checkmark {
    background-color: #1e293b;
    border-color: #475569;
  }

  /* Hover state */
  .read-checkbox-label:hover .checkmark {
    border-color: #10B981;
  }

  /* Checked state */
  .read-checkbox:checked + .checkmark {
    background-color: #10B981;
    border-color: #10B981;
    color: white;
  }

  .label-text {
    font-size: 0.875rem;
    color: #64748b;
  }

  .dark .label-text {
    color: #94a3b8;
  }
</style>

<script>
  // Initialize checkboxes from localStorage
  function initializeCheckboxes() {
    const checkboxes = document.querySelectorAll('input[type="checkbox"][data-post-id]');
    checkboxes.forEach((checkbox) => {
      const postId = checkbox.getAttribute('data-post-id');
      if (postId) {
        const isRead = localStorage.getItem(`post-${postId}-read`) === 'true';
        (checkbox as HTMLInputElement).checked = isRead;
      }
    });
  }

  // Handle checkbox changes
  function handleCheckboxChange(event: Event) {
    const checkbox = event.target as HTMLInputElement;
    const postId = checkbox.getAttribute('data-post-id');
    const postTitle = checkbox.getAttribute('data-post-title');
    
    if (postId) {
      localStorage.setItem(`post-${postId}-read`, checkbox.checked.toString());
      
      // Optional: Show a toast or notification
      if (checkbox.checked) {
        console.log(`Marked "${postTitle}" as read`);
      } else {
        console.log(`Marked "${postTitle}" as unread`);
      }
    }
  }

  // Add event listeners
  document.addEventListener('DOMContentLoaded', () => {
    initializeCheckboxes();
    
    const checkboxes = document.querySelectorAll('input[type="checkbox"][data-post-id]');
    checkboxes.forEach((checkbox) => {
      checkbox.addEventListener('change', handleCheckboxChange);
    });
  });
</script> 